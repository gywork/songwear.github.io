<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[09 搭建Hexo——Next主题增加Fork me on github]]></title>
      <url>%2Fposts%2Fhexo%2F20161123cix2s5473000n4wv6d61svgc0.html</url>
      <content type="text"><![CDATA[如果有需要在博客中增加【Fork me on github】彩带的读者，请参考此文章。 Fork me on github首先这个东西的名字叫做 Github Ribbons，效果及Github的教程，请点击。 使用方法及其简单，只需在上面的地址中选择你需要的样式，将代码插入到任意一个全局的模板文件中即可。不过，我使用的样式，貌似不太需要这个效果。有需要的可以尝试。 第一步：复制你需要的样式代码。 第二步：找到主题目录下，layout\_partials ，我是把上面的代码放到 header.swig 的最后面，如下图： 图片2 就是这样。多简单。 最终效果： 以上。增加Fork me on github完成。 本系列目录00 搭建Hexo——前言 01 搭建Hexo——准备工作 02 搭建Hexo——本地环境搭建 03 搭建Hexo——部署 04 搭建Hexo——域名及解析 05 搭建Hexo——主题推荐 06 搭建Hexo——日常操作 07 搭建Hexo——Next主题设置背景 08 搭建Hexo——Next主题增加页面抖动 09 搭建Hexo——Next主题增加Fork me on github]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[08 搭建Hexo——Next主题增加页面抖动]]></title>
      <url>%2Fposts%2Fhexo%2F20161123cix2s546y000j4wv6oybwl22v.html</url>
      <content type="text"><![CDATA[如果有需要我博客中的 不要点我 功能的读者，请参考此文章。 增加页面抖动效果之前的名字叫做【High 一下】，改了一下名字，专治各种强迫症！只不过抖起来没完没了！不知道如何停止…… 声明：功能非原创，感谢原作者。我只是互联网的搬运工。侵删。 找到主题文件夹下 layout\_partials 的 header.swig 文件，在 &lt;ul&gt; 标签内部增加 &lt;li&gt;&lt;/li&gt; 标签，并将下面的代码粘贴到 li 标签内部，即可。至于如何自定义音乐等细节问题，还没搞清楚。 代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150&lt;a title=&quot;专治各种强迫症&quot; href=&apos;javascript:(function() &#123; function c() &#123; var e = document.createElement(&quot;link&quot;); e.setAttribute(&quot;type&quot;, &quot;text/css&quot;); e.setAttribute(&quot;rel&quot;, &quot;stylesheet&quot;); e.setAttribute(&quot;href&quot;, f); e.setAttribute(&quot;class&quot;, l); document.body.appendChild(e) &#125; function h() &#123; var e = document.getElementsByClassName(l); for (var t = 0; t &lt; e.length; t++) &#123; document.body.removeChild(e[t]) &#125; &#125; function p() &#123; var e = document.createElement(&quot;div&quot;); e.setAttribute(&quot;class&quot;, a); document.body.appendChild(e); setTimeout(function() &#123; document.body.removeChild(e) &#125;, 100) &#125; function d(e) &#123; return &#123; height : e.offsetHeight, width : e.offsetWidth &#125; &#125; function v(i) &#123; var s = d(i); return s.height &gt; e &amp;&amp; s.height &lt; n &amp;&amp; s.width &gt; t &amp;&amp; s.width &lt; r &#125; function m(e) &#123; var t = e; var n = 0; while (!!t) &#123; n += t.offsetTop; t = t.offsetParent &#125; return n &#125; function g() &#123; var e = document.documentElement; if (!!window.innerWidth) &#123; return window.innerHeight &#125; else if (e &amp;&amp; !isNaN(e.clientHeight)) &#123; return e.clientHeight &#125; return 0 &#125; function y() &#123; if (window.pageYOffset) &#123; return window.pageYOffset &#125; return Math.max(document.documentElement.scrollTop, document.body.scrollTop) &#125; function E(e) &#123; var t = m(e); return t &gt;= w &amp;&amp; t &lt;= b + w &#125; function S() &#123; var e = document.createElement(&quot;audio&quot;); e.setAttribute(&quot;class&quot;, l); e.src = i; e.loop = false; e.addEventListener(&quot;canplay&quot;, function() &#123; setTimeout(function() &#123; x(k) &#125;, 500); setTimeout(function() &#123; N(); p(); for (var e = 0; e &lt; O.length; e++) &#123; T(O[e]) &#125; &#125;, 15500) &#125;, true); e.addEventListener(&quot;ended&quot;, function() &#123; N(); h() &#125;, true); e.innerHTML = &quot; &lt;p&gt;If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.&lt;/p&gt; &lt;p&gt;&quot;; document.body.appendChild(e); e.play() &#125; function x(e) &#123; e.className += &quot; &quot; + s + &quot; &quot; + o &#125; function T(e) &#123; e.className += &quot; &quot; + s + &quot; &quot; + u[Math.floor(Math.random() * u.length)] &#125; function N() &#123; var e = document.getElementsByClassName(s); var t = new RegExp(&quot;\\b&quot; + s + &quot;\\b&quot;); for (var n = 0; n &lt; e.length; ) &#123; e[n].className = e[n].className.replace(t, &quot;&quot;) &#125; &#125; var e = 30; var t = 30; var n = 350; var r = 350; var i = &quot;//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake.mp3&quot;; var s = &quot;mw-harlem_shake_me&quot;; var o = &quot;im_first&quot;; var u = [&quot;im_drunk&quot;, &quot;im_baked&quot;, &quot;im_trippin&quot;, &quot;im_blown&quot;]; var a = &quot;mw-strobe_light&quot;; var f = &quot;//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake-style.css&quot;; var l = &quot;mw_added_css&quot;; var b = g(); var w = y(); var C = document.getElementsByTagName(&quot;*&quot;); var k = null; for (var L = 0; L &lt; C.length; L++) &#123; var A = C[L]; if (v(A)) &#123; if (E(A)) &#123; k = A; break &#125; &#125; &#125; if (A === null) &#123; console.warn(&quot;Could not find a node of the right size. Please try a different page.&quot;); return &#125; c(); S(); var O = []; for (var L = 0; L &lt; C.length; L++) &#123; var A = C[L]; if (v(A)) &#123; O.push(A) &#125; &#125;&#125;)()&apos;&gt;不要点我&lt;/a&gt; 以上。增加页面抖动效果完成。 本系列目录00 搭建Hexo——前言 01 搭建Hexo——准备工作 02 搭建Hexo——本地环境搭建 03 搭建Hexo——部署 04 搭建Hexo——域名及解析 05 搭建Hexo——主题推荐 06 搭建Hexo——日常操作 07 搭建Hexo——Next主题设置背景 08 搭建Hexo——Next主题增加页面抖动 09 搭建Hexo——Next主题增加Fork me on github]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[07 搭建Hexo——Next主题设置背景]]></title>
      <url>%2Fposts%2Fhexo%2F20161123cix2s546q000g4wv642hdlkbs.html</url>
      <content type="text"><![CDATA[如果有需要我博客中的背景的同学，请参考此文章。 Next主题设置背景声明：功能效果非原创，感谢原作者。我只是互联网的搬运工。侵删。 第一步： 下载本博客中的 particle.js 第二步： 粘贴到主题文件夹的 source\js\src 路径下。 第三步： 找到主题文件夹的 layout/_layout.swig 文件，打开。 第四步： 在最后面增加如下代码,保存即可。 1&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/particle.js&quot;&gt;&lt;/script&gt; 以上。Next主题设置背景完成。 本系列目录00 搭建Hexo——前言 01 搭建Hexo——准备工作 02 搭建Hexo——本地环境搭建 03 搭建Hexo——部署 04 搭建Hexo——域名及解析 05 搭建Hexo——主题推荐 06 搭建Hexo——日常操作 07 搭建Hexo——Next主题设置背景 08 搭建Hexo——Next主题增加页面抖动 09 搭建Hexo——Next主题增加Fork me on github]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[06 GitHubPage搭建Hexo——日常操作]]></title>
      <url>%2Fposts%2Fhexo%2F20161122cix2s546c00094wv61ipaarnx.html</url>
      <content type="text"><![CDATA[其实在之前的操作中，我们已经使用了很多在日常维护博客时使用的指令。 如果有其他的需要，请参考Hexo指令完整版。一切以官网文档为主 日常维护： GitHubPage搭建Hexo——MarkDown使用 http://www.snren.com/dispbbs.asp?boardid=19&amp;id=150100 添加网易云音乐 打开网页版网易云音乐。 如果只是加入单曲，只需要搜索歌曲，点开歌曲名，点击生成外链播放器，复制html代码（可以选择是否自动播放），将html代码无需任何修改放入markdown文章里就OK了。 如果想要加入歌单，就需要自己创建歌单，然后分享歌单，找到自己的分享动态，点进去可以看到有“生成外链播放器”这些字眼，其余操作就和上面一样了。不过，你的歌单有变化的话，这个外链的歌曲同样跟着变，这一点挺棒的。 例如，播放待你长发及腰这首歌，自动播放只需要嵌入一下代码 &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;http://music.163.com/outchain/player?type=2&amp;id=28947001&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt; 嵌入不自动播放只需要把以上代码中的auto改为=0即可，样子是这样的 本系列目录00 搭建Hexo——前言 01 搭建Hexo——准备工作 02 搭建Hexo——本地环境搭建 03 搭建Hexo——部署 04 搭建Hexo——域名及解析 05 搭建Hexo——主题推荐 06 搭建Hexo——日常操作 07 搭建Hexo——Next主题设置背景 08 搭建Hexo——Next主题增加页面抖动 09 搭建Hexo——Next主题增加Fork me on github]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[05 GitHubPage搭建Hexo——主题推荐]]></title>
      <url>%2Fposts%2Fhexo%2F20161121cix2s546k000b4wv6wr51tcb2.html</url>
      <content type="text"><![CDATA[概述： 主题选择 Next主题 主题选择话不多说，选择主题，请到Hexo官网主题部分，这里有很多主题供大家选择，网站偶尔打开会很慢。请耐心等待。其中，点击图片是预览主题的样式，点击主题下面的名字就会跳转到该主题在 GitHub 的地址。具体如何安装及使用方法，都写的很详细。阅读文档的能力应该是具备的。不再多说了。 有哪些好看的 Hexo 主题? - GitHub - 知乎 Next主题我个人推荐大家使用这个主题，原因如下： 使用手册中文且完整 使用人数过多，遇到问题方便解决 我觉得很好看 使用手册可以帮助你对整体有所了解 ………… 我个人觉得，如果连文档都懒得看，就此放弃吧。我会在后面的文章中涉及一些能帮助你加强主题的方法。 官方使用手册 以上。主题推荐完成。 本系列目录00 搭建Hexo——前言 01 搭建Hexo——准备工作 02 搭建Hexo——本地环境搭建 03 搭建Hexo——部署 04 搭建Hexo——域名及解析 05 搭建Hexo——主题推荐 06 搭建Hexo——日常操作 07 搭建Hexo——Next主题设置背景 08 搭建Hexo——Next主题增加页面抖动 09 搭建Hexo——Next主题增加Fork me on github]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[04 GitHubPage搭建Hexo——域名及解析]]></title>
      <url>%2Fposts%2Fhexo%2F20161120cix2s546700064wv6np0zhsv2.html</url>
      <content type="text"><![CDATA[概述： 域名的选择 域名服务商选择 域名解析 其他 域名选择都已经到这一步了，使用 GitHub 的二级域名怎么能显得自己牛逼呢。必须注册域名啊！如何选择完全凭个人喜好决定了，你可以试试自己的名字啦、女友的名字啦、各种单词拼音的组合啦。总之，简短有意义就好。在哪儿买都可以，当然建议大家选择一些大的服务商。关于后缀，和本身的名字一样，尽量简短且有意义吧。 例如我的域名呢，songwear 和我的名字很像啦，后缀 .wang 经好友普及，有渣男的意思，心向往之，故选择此域名。(尼玛，前女友并不姓王！！！) 请大家选择的时候，注意首年价格和续费价格！！有些后缀的域名，第二年和首年差很多的！ 服务商选择关于服务商的选择，我个人只推荐三家，国内的阿里云(中国万网已经是阿里的了)。国外的Dogdaddy和Namecheap 。新手如果是纯小白用户，强烈建议选择 阿里云，愿意折腾的或者有其他目的的可以选择国外的服务商。当然国内还有百度、腾讯等服务商，我个人没用过，不予评价。 我对这几家的了解，也是来自网络。仅仅是给大家一个参考吧。简单说一下。(也可以参考：知乎，范进的这个回答) 阿里云首先阿里云的价格还是很合理的，与国外的不同，不必考虑再找国内的 DNS 服务商，个人觉得，阿里云在国内的地位是绝对领先的。 Dogdaddy老牌国际服务商。目前已经有中文界面，支持支付宝付款，有些国内需要备案或者即将备案的域名，国外的服务商是不需要备案的，但是需要国内的DNS服务商来做解析，这时候就需要DNSPOD出场了。国外注册的域名需要解析到国内的 DNSPOD，来保证网站在国内的速度。 DNSPOD 和 Dogdaddy 是两家公司，需分别注册。 Namecheap赠送 whois隐藏 和 SSL证书免费一年，这是全球唯一一家域名注册商能够做到的。至于 whois 信息有没有那么必要隐藏，就仁者见仁啦。稍微提一下，Namecheap 的网站是英文的，支付的话，貌似需要国际信用卡，因此，考虑一下这点。 域名解析在做解析之前，还有两步工作要处理。 设置CNAME回到 Hexo 的根目录的 source 文件夹中，新建文本文档，内容为你的域名，请注意，此处不需要加协议名，如下图： 接下来，将此文件的名字改为，CNAME 后缀也要删除掉 设置GitHub Custum domain首先登录 GitHub，选择我们创建的仓库，上面有 setting 按钮，进入仓库设置界面 在Custom domain输入自己的域名，Save 即可 接下来，就可以去做解析了。 阿里云添加解析步骤话不多说，只要按照下面的图走，一定没问题 如果是第一次登录，会出现引导界面，选择高级设置即可 再添加一条主机记录是@的解析，记录类型都代表什么，下面写的很清楚 接下来慢慢等待吧，不超过5分钟，就会解析好的。 最后，打开你的浏览器，输入你注册的域名，即可访问你的博客！ Dogdaddy+DNSPOD解析步骤留个坑，等我再需要域名的时候，去 Dogdaddy 买再截图吧。 其他nslookup完成上述工作，网站还是没有显示。请打开命令提示符，输入 nslookup 你的域名 nslookup songwear.wang 这个时候，才是正常的。 实名制有一些域名注册是需要进行实名认证的，具体请参考淘宝的这个链接。 有些域名在国外注册在国内解析也需要实名认证！！！总之，越来越多的域名都需要实名认证了，方便国家管理嘛，你懂的~ [新闻]吴洪声：国外域名注册商域名不许国内解析(愚人节玩笑) 以上。域名及解析部分已经完成。 本系列目录00 搭建Hexo——前言 01 搭建Hexo——准备工作 02 搭建Hexo——本地环境搭建 03 搭建Hexo——部署 04 搭建Hexo——域名及解析 05 搭建Hexo——主题推荐 06 搭建Hexo——日常操作 07 搭建Hexo——Next主题设置背景 08 搭建Hexo——Next主题增加页面抖动 09 搭建Hexo——Next主题增加Fork me on github]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[03 GitHubPage搭建Hexo——部署]]></title>
      <url>%2Fposts%2Fhexo%2F20161120cix2s545z00054wv688w63unj.html</url>
      <content type="text"><![CDATA[概述： 修改 config 文件 部署 其他 修改 config 文件修改 _config.yml 文件，这个文件存储在 Hexo 的根目录，使用编辑器打开(不建议使用记事本，格式有可能很乱)，直接找到最后面，按照下面格式修改。其中，repository: git@github.com:songwear/songwear.github.io.git 为我们代码存放的地址。因此，将 songwear 换成你GitHub的仓库的名字即可。 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repository: git@github.com:songwear/songwear.github.io.git branch: master 请注意，每个冒号(:)后面都有空格！！！ 部署输入命令，即可开始提交你生成的文件(即 public 文件夹中的内容)部署到你的 GitHub 仓库中，当提示 INFO Deploy done: git 即提交完成。去刷新你的 GitHub 仓库，就会看到已经有很多文件已经上传进去啦！ 1$ hexo d 如果之前你是按照我的步骤，一步一步来的话，现在打开浏览器，输入你的仓库名(我的是: songwear.github.io )，就可以访问到你刚刚在本地看到的效果了！ 其他如果提交的时候，提示如下信息： 那么，你需要执行下面的命令，安装 git 部署工具 1$ npm install hexo-deployer-git --save 安装成功后 ，重新执行 hexo d 即可。 以上。部署工作已完成。 本系列目录00 搭建Hexo——前言 01 搭建Hexo——准备工作 02 搭建Hexo——本地环境搭建 03 搭建Hexo——部署 04 搭建Hexo——域名及解析 05 搭建Hexo——主题推荐 06 搭建Hexo——日常操作 07 搭建Hexo——Next主题设置背景 08 搭建Hexo——Next主题增加页面抖动 09 搭建Hexo——Next主题增加Fork me on github]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[02 搭建Hexo——本地环境搭建]]></title>
      <url>%2Fposts%2Fhexo%2F20161119cix2s545u00044wv63kjm66j5.html</url>
      <content type="text"><![CDATA[概述： 安装 Hexo 初始化 生成静态页 本地调试 与远程库关联(GitHub 仓库) 其他 安装 Hexo第一步：通过 npm 安装 Hexo打开我们安装好的 Git Bash 客户端 输入命令： 1$ npm install hexo -g NPM的全称是 Node Package Manager，是一个 NodeJS 包管理和分发工具，Nodejs 自身提供了基本的模块，但是开发实际应用过程中仅仅依靠这些基本模块则还需要较多的工作。幸运的是，Nodejs 库和框架为我们提供了帮助，让我们减少工作量。但是成百上千的库或者框架管理起来又很麻烦，有了 NPM，可以很快的找到特定服务要使用的包，进行下载、安装以及管理已经安装的包。 经过测试，其实国内的网络环境安装是没问题的。但是，如果有安装过程中遇到的问题，可以考虑添加淘宝源，具体添加方法，请参考淘宝 NPM 镜像使用说明部分。暂且不表。 第二步：创建 Hexo 文件夹这个文件夹就是以后我们网站的本地仓库，日常的维护，都将在这个文件夹中进行。熟悉 Git 命令操作的可以通过 Git 命令进行创建。对于不熟悉的同学，我还是建议大家去熟悉一下，还是很方便的。(不了解的同学去手动创建文件夹，然后进入文件夹，右键选择，Git Bash Here，即可) 请确认，当前目录是我们今后管理Hexo的目录，/d/hexo为当前路径 第三步：初始化操作$ hexo init 这里将为我们下载 hexo 需要的文件，包括初始主题之类的东西。请在网络状态良好的环境下进行。 第四步：生成静态页生成静态文件和 db.json，生成之后，我们的 public 文件夹下就会生成我们需要的网页。 $ hexo g 第五步：在本地启动$ heso s 此时打开浏览器，在地址栏输入 localhost:4000 即可看到默认的模版页 注意:此时防火墙会发出警告，允许访问即可 其他端口被占用当前面的工作都没出现任何问题，我们访问 localhost:4000 并没有出现 Hexo 的网站。 首先，请你确认你的服务确实已经开启，即在 Git bash 中显示如下提示： 1INFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 那么，按下Ctrl+C停止 重新输入，将端口更改为8111，选择一个不常用的端口即可。 1$ hexo server -p 8111 再次打开浏览器，输入新的地址即可 1localhost:8111 以上。本地环境搭建已经完成。我们日常的操作都将在本地调试没有问题后，再进行发布，发布方法将在下一篇介绍。 Hexo在npm的地址 下面这条命令是 npm 的地址提供的，我也不太清楚，cli的作用是什么，希望知道的小伙伴可以告诉我。 1$ npm install hexo-cli -g Hexo官网 本系列目录00 搭建Hexo——前言 01 搭建Hexo——准备工作 02 搭建Hexo——本地环境搭建 03 搭建Hexo——部署 04 搭建Hexo——域名及解析 05 搭建Hexo——主题推荐 06 搭建Hexo——日常操作 07 搭建Hexo——Next主题设置背景 08 搭建Hexo——Next主题增加页面抖动 09 搭建Hexo——Next主题增加Fork me on github]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[01 搭建Hexo——准备工作]]></title>
      <url>%2Fposts%2Fhexo%2F20161118cix2s545j00014wv66cgro2ug.html</url>
      <content type="text"><![CDATA[概述： 注册 GitHub 账号以及新建仓库 安装 nodeJS 客户端 安装 Git 客户端 Git 客户端与 GitHub 账户进行关联 GitHubGithub 全球最大的基友平台。国内还有一个 Gitcafe (2016年3月被CODING收购)，都是代码托管平台，当然后者和前者的差距还有很大，后面我们会提到 Gitcafe 。请不要使用 QQ 邮箱注册 Github，至于理由，我会在之后的文章中说明。至于如何注册以及验证邮箱，我就不再赘述，翻译工具已经很强大了。 第一步：新建仓库 第二步：输入需要创建的仓库名格式为账号名 .github.io 完成后，创建即可。 1songwear.github.io 之前我已经创建过了，所以系统提示已经存在。 就是这么简单，仓库已经创建完成，稍后我们会上传代码。 P.S.关于仓库的名字，如果后面不想注册域名的话，使用你的仓库名(也就是这个 github 的二级域名)也是可以访问你的博客的。 NodeJS 环境Hexo 是一个基于 Node.js 的静态博客程序。因此我们需要 NodeJS 来安装 Hexo。安装步骤没什么好说的，官网直接下载安装程序即可，也 无需 配置环境变量。(nodejs中已经包含npm无需再次下载) Git 客户端Git 就不多说了，廖雪峰大神讲的足够好了，我只是讲一下我们常用的操作。 第一步：安装 Git到官网下载，一切默认，安装即可。成功之后，桌面会多出一个 Git Bash 的快捷方式，以后我们进行版本控制完全靠他了。 第二步：设置本地的 Git 账号打开 Git Bash，输入下面的命令，表示你这台机器上所有的 Git 仓库都会使用这个账户操作。 12$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot; 如果需要查看当前设置的用户名和邮箱，分别执行下面的操作 12$ git config user.name$ git config user.email 如果需要查看当前设置的用户名和邮箱，分别执行下面的操作 12$ git config --global user.name &quot;username&quot;$ git config --global user.email &quot;email&quot; 第三步：关联 GitHub 账号首先在本地生成密钥，存放的路径就是后面显示的地址，如果不做修改 默认路径为：C:\Users\Administrator.ssh 输入命令： 1$ ssh-keygen -t rsa -C &quot;你的Github邮箱&quot; 接下来提示输入密码，为了应对即使密钥文件不小心泄露了，别人也不能直接利用密钥操作你的 git 帐号这个问题。当然，为了操作方便，直接输入回车，使其为空即可。 确认你输入的密码 设置成功 我们进入到本地 C:\Users\Administrator\.ssh 文件夹下,找到 id_rsa.pub 这个文件，使用记事本即可打开，复制全部代码。 接下来，打开GitHub，选择 Settings——SSH and GPG keys——New SSH key，将我们刚刚复制的 id_rsa.pub 中的内容粘贴到Key中，Title可以自定义。 填写完成后，选择按钮 Add SSH key。 接下来要求你输入你的 GitHub 密码。 确认后，将会显示下图效果。 以上，GitHub 上的工作就完成了。 回到 Git 中，输入下面的命令 1$ ssh -T git@github.com 当你第一次使用 Git 的 clone 或者 push 命令连接 GitHub 时，会得到一个SSH警告： 123The authenticity of host &apos;github.com (xx.xx.xx.xx)&apos; can&apos;t be established.RSA key fingerprint is xx.xx.xx.xx.xx.Are you sure you want to continue connecting (yes/no)? 这是因为 Git 使用 SSH 连接，而 SSH 连接在第一次验证 GitHub 服务器的 Key 时，需要你确认 GitHub 的 Key 的指纹信息是否真的来自 GitHub 的服务器，输入yes回车即可。 Git 会输出一个警告，告诉你已经把 GitHub 的 Key 添加到本机的一个信任列表里了： 1Warning: Permanently added &apos;github.com&apos; (RSA) to the list of known hosts. 这个警告只会出现一次，后面的操作就不会有任何警告了。 关于 SSH 警告这部分内容，是出自廖雪峰老师的添加远程库部分 这样我们的本地的 Git 和 Github 账户就关联成功了。 以上。准备工作已经完成。 本系列目录00 搭建Hexo——前言 01 搭建Hexo——准备工作 02 搭建Hexo——本地环境搭建 03 搭建Hexo——部署 04 搭建Hexo——域名及解析 05 搭建Hexo——主题推荐 06 搭建Hexo——日常操作 07 搭建Hexo——Next主题设置背景 08 搭建Hexo——Next主题增加页面抖动 09 搭建Hexo——Next主题增加Fork me on github]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[00 搭建Hexo——前言]]></title>
      <url>%2Fposts%2Fhexo%2F20161117cix2s545900004wv66z9fzq8n.html</url>
      <content type="text"><![CDATA[A fast, simple &amp; powerful blog framework, powered by Node.js. 这句话是框架的作者是 @tommy351 对 Hexo 的描述。简单点说，Hexo 是超轻便的基于 Node 的一个静态博客框架，目前我身边很多小伙伴都在使用 Hexo。特别是做前端工作的家伙，好多都在使用静态博客！这个系列绝对是我写的最详细的教程了，希望对大家有所帮助。 无奈本人并没有苹果电脑，黑苹果我的老爷机也带不动，因此 本系列文章仅针对Windows用户 。 以上。前言部分已经完成。 本系列目录00 搭建Hexo——前言 01 搭建Hexo——准备工作 02 搭建Hexo——本地环境搭建 03 搭建Hexo——部署 04 搭建Hexo——域名及解析 05 搭建Hexo——主题推荐 06 搭建Hexo——日常操作 07 搭建Hexo——Next主题设置背景 08 搭建Hexo——Next主题增加页面抖动 09 搭建Hexo——Next主题增加Fork me on github]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[心情随笔]]></title>
      <url>%2Fposts%2Fmood%2F20161116cix2s54h1001m4wv6d36tgqql.html</url>
      <content type="text"><![CDATA[感谢首先，感谢推荐给我这个博客系统的家伙，之前上学的时候使用过 wordpress ，我个人觉得还是很好用的哈，插件可以满足我能想到的所有功能。但是被一个很帅的家伙告知，WP 太重了，想想也确实是，现在流行轻量级的东西，于是，入了 Hexo 的坑。感谢他给我一个很棒的机会，可以给很多人去讲关于我知道的 Hexo，反思一下自己讲课水平确实不是很好，浪费了一次这么棒的机会。 帮助我觉得，搭建一个博客并不难，不管用什么系统，什么技术。但是，能坚持去写博客，这个才是最难的。可能是出于对自己讲的不是很清楚的愧疚感，这些天有很多人来问我，关于 Hexo 搭建的问题，其实还是很开心的，大家一起研究还是很好的啊，而且我真的是知无不言，我没遇到的问题，我们一起来解决。辛苦没有白费，很多人的博客都已经搭建好了，我记下了大家的域名，每天回家，我都会去访问大家的域名，但是，并没有在搭建成功之后有接下来的动作，有些人还是默认的主题，有些人已经换过主题了，但是，博客是空的，就好像一个并没有住人的废弃的房子一样。总觉得，之前的辛苦都没什么意义了，我特别讨厌做没有意义的事情，房子的意义不是里面的人吗？难道是盖房子的过程？(当然每个人理解不同，也许有人真的只是为了盖房子)所以，希望后面有想入坑的同学，慎重考虑，不要浪费GitHub的空间，不要浪费自己买域名的钱，不要浪费自己的时间。以上。 剩下的工作目前没有增加评论的功能，原因就是上面写的帮助的部分啦，不过我会非常详细的写一份关于我在 Windows 上搭建 Hexo 的详细的教程，一方面是为自己做一个记录，另一方面希望能帮助真正需要的人。 SEO 的部分暂时还没开始做，这几天一直在折腾主题的事情，现在可以告一段落了。等到网站有了内容，再来做优化。 心态总是希望自己能做到最好，缺往往忽略了时间成本，想学的东西特别多，学的越多，发现自己不会的东西越多，所有人的时间都是一样的，无奈自己也不是天资聪颖之人，甚至有些愚钝，只好依靠更多的时间来堆积，此非长久之计，需妥善处理…… 以上。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2Fposts%2FHelloWorld%2F20161111cix2s547g000q4wv69vps48ek.html</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
